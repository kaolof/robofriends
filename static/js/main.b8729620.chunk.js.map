{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","CardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAbH,SAACC,GACT,IAAOC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,MAAOC,EAAKH,EAALG,GACpB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,gCACG,6BAAKF,IACL,4BAAIC,WCULK,EAhBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAETC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GAElC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAGtB,OACI,8BACKH,KCIEI,EAdE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACf,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,oCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARD,SAAClB,GACX,OACI,qBAAKmB,MAAO,CAACC,SAAS,SAAUC,OAAQ,kBAAmBC,OAAO,SAAlE,SACKtB,EAAMuB,YCiBJC,E,kDAnBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,gEAEJG,KAAK7B,MAAMuB,a,GAhBCQ,aC6DZC,G,8DAlDX,aAAc,IAAD,8BACT,gBAkBJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAlBzC,EAAKZ,MAAM,CACPjB,OAAQ,GACR2B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAW/B,WACI,MAA2Bb,KAAKJ,MAAzBjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACRQ,EAAgBnC,EAAOoC,QAAO,SAAAC,GAChC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAIzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPlC,oBAAIvC,UAAU,KAAd,4B,GAlCU2B,cCAHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.b8729620.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card= (props)=>{\r\n    const {name, email, id}= props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 '>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n             <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=>{\r\n\r\n    const CardComponent= robots.map((user,i)=>{\r\n        \r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {CardComponent}\r\n        </div>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox= ({searchChange })=>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className=' pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n                />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll= (props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll', border: '1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n         this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>OOOOOPpppssss. that's not good</h1>\r\n        }\r\n        return this.props.children \r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SerachBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport '../index.css'\r\nimport './app.css'\r\n\r\nconst state = {\r\n   \r\n}\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>{\r\n            return response.json();\r\n        })\r\n        .then(users=>{\r\n            this.setState({robots: users})\r\n        })\r\n        \r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchField: event.target.value})\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchField}=this.state;\r\n        const filteredRobots= robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        //operador ternario\r\n        return !robots.length? \r\n        <h1 className='tc'>Loading...</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SerachBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/> \r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}